services:
  db:
    image: postgres:17.2-alpine
    container_name: postgres
    env_file: .env
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-net

  redis:
    image: redis:7.4.2-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    networks:
      - app-net
    depends_on:
      - db

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker
    environment:
      DB_SERVER: db
      DB_PORT: 5432
      REDIS_HOST: redis
    networks:
      - app-net
    depends_on:
      - db

  vote:
    build:
      context: ./vote
      dockerfile: dockerfile
    container_name: vote
    ports:
      - "8080:8080"
    environment:
      REDIS_HOST: redis
    networks:
      - app-net
    depends_on:
      - redis

  result:
    build:
      context: ./result
      dockerfile: Dockerfile
    container_name: result
    ports:
      - "8888:8888"
    environment:
      DB_SERVER: db
      DB_PORT: 5432
    networks:
      - app-net
    depends_on:
      - db

volumes:
  db_data:
  redis_data:

networks:
  app-net:
