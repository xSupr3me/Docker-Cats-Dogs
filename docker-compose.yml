version: "3.8"

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    deploy:
      mode: replicated
      replicas: 1  # Une seule réplique pour la BD principale
      placement:
        constraints:
          - node.role == manager  # Toujours sur le manager pour la consistance
    networks:
      - app-net

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    deploy:
      mode: replicated
      replicas: 1  # Une seule réplique pour Redis principal
      placement:
        constraints:
          - node.role == manager  # Toujours sur le manager pour la consistance
    networks:
      - app-net

  worker:
    image: voting-worker:latest
    environment:
      DB_SERVER: db
      DB_PORT: 5432
      REDIS_HOST: redis
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - app-net

  vote:
    image: voting-vote:latest
    ports:
      - "8080:8080"
    environment:
      REDIS_HOST: redis
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - app-net

  result:
    image: voting-result:latest
    ports:
      - "8888:8888"
    environment:
      DB_SERVER: db
      DB_PORT: 5432
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - app-net

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-net:
    driver: overlay
